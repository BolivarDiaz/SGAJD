/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgajosefina;

import java.awt.Color;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Bolivar
 */
public class facturacion extends javax.swing.JFrame {
double precio_mostrar[]=new double[5];
double preciocompra_mostrar[]=new double[5];
double ganancias[]=new double[5];
    /**
     * Creates new form facturacion
     */
    public facturacion(Point p) {
        initComponents();
        setLocation(p);
        setTitle("Facturacion");
        setResizable(false);
        
        //configurando spinners 
        
    
         SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(0);
        spinner1.setModel(spm);
        spinner2.setModel(spm);
        spinner3.setModel(spm);
        spinner4.setModel(spm);
        spinner5.setModel(spm);
        buttonvalidar.setEnabled(false);
        buttonnewfactura.setEnabled(false);
    JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner1.getEditor()).getTextField();
    tf.setEditable(false);
    
     tf = ((JSpinner.DefaultEditor) spinner2.getEditor()).getTextField();
    tf.setEditable(false);
    
     tf = ((JSpinner.DefaultEditor) spinner3.getEditor()).getTextField();
    tf.setEditable(false);
    
     tf = ((JSpinner.DefaultEditor) spinner4.getEditor()).getTextField();
    tf.setEditable(false);
    
     tf = ((JSpinner.DefaultEditor) spinner5.getEditor()).getTextField();
    tf.setEditable(false);
    
    
        
           String registro="";
        String nombre="";
        String marca="";
        // cargado el combo box
        try{
          FileReader leer=new FileReader("datos/articulos.data");
       BufferedReader contenido=new BufferedReader(leer);
       
       
       registro=contenido.readLine();
       
       while(registro!=null){
              

  
    
        
           for(int i=0;i<registro.length();i++){
           // lee nombre articulo
               if(registro.charAt(i)=='#'){
               
                   for(int j=i+1;registro.charAt(j)!='$';j++){
                   nombre+=registro.charAt(j);
                   } 
                
           
              }
               
                // lee marca articulo
               if(registro.charAt(i)=='$'){
               
                   for(int j=i+1;registro.charAt(j)!='%';j++){
                   marca+=registro.charAt(j);
                   } 
           
              }
               
                
               
           }
           
           if(registro.equals("")==false){
               cbxarticulo1.addItem(nombre+" ("+marca+")");
               cbxarticulo2.addItem(nombre+" ("+marca+")");
               cbxarticulo3.addItem(nombre+" ("+marca+")");
               cbxarticulo4.addItem(nombre+" ("+marca+")");
               cbxarticulo5.addItem(nombre+" ("+marca+")");
           
           }
                  registro="";
                  nombre="";
                  marca="";
                  registro=contenido.readLine();
  
                  
       }
       
       //cerrando el flujo de lectura
       leer.close();
       contenido.close();
 
      
        }catch(Exception e){
        
            
        
        }
        
        
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbxarticulo1 = new javax.swing.JComboBox<>();
        cbxarticulo2 = new javax.swing.JComboBox<>();
        cbxarticulo3 = new javax.swing.JComboBox<>();
        cbxarticulo4 = new javax.swing.JComboBox<>();
        cbxarticulo5 = new javax.swing.JComboBox<>();
        spinner1 = new javax.swing.JSpinner();
        spinner2 = new javax.swing.JSpinner();
        spinner3 = new javax.swing.JSpinner();
        spinner4 = new javax.swing.JSpinner();
        spinner5 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        lbprecio1 = new javax.swing.JLabel();
        lbprecio2 = new javax.swing.JLabel();
        lbprecio3 = new javax.swing.JLabel();
        lbprecio4 = new javax.swing.JLabel();
        lbprecio5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbganancia = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbtotal = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        buttonvalidar = new javax.swing.JButton();
        buttonnewfactura = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Facturacion:");

        jLabel2.setText("Articulo 1:");

        jLabel3.setText("Articulo 2:");

        jLabel4.setText("Articulo 3:");

        jLabel5.setText("Articulo 4:");

        jLabel6.setText("Articulo 5:");

        cbxarticulo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir articulo" }));
        cbxarticulo1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxarticulo1ItemStateChanged(evt);
            }
        });

        cbxarticulo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir articulo" }));
        cbxarticulo2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxarticulo2ItemStateChanged(evt);
            }
        });

        cbxarticulo3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir articulo" }));
        cbxarticulo3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxarticulo3ItemStateChanged(evt);
            }
        });

        cbxarticulo4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir articulo" }));
        cbxarticulo4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxarticulo4ItemStateChanged(evt);
            }
        });

        cbxarticulo5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir articulo" }));
        cbxarticulo5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxarticulo5ItemStateChanged(evt);
            }
        });

        spinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner1StateChanged(evt);
            }
        });

        spinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner2StateChanged(evt);
            }
        });

        spinner3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner3StateChanged(evt);
            }
        });

        spinner4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner4StateChanged(evt);
            }
        });

        spinner5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner5StateChanged(evt);
            }
        });

        jLabel7.setText("Precio:");

        lbprecio1.setText("00000");

        lbprecio2.setText("00000");

        lbprecio3.setText("00000");

        lbprecio4.setText("00000");

        lbprecio5.setText("00000");

        jLabel8.setText("Ganancia:");

        lbganancia.setText("00000");

        jLabel9.setText("Cantidad:");

        jLabel10.setText("Costo Total:");

        lbtotal.setText("00000");

        jButton1.setText("Facturar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonvalidar.setText("Validar Factura");
        buttonvalidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonvalidarActionPerformed(evt);
            }
        });

        buttonnewfactura.setText("Nueva factura");
        buttonnewfactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonnewfacturaActionPerformed(evt);
            }
        });

        jButton2.setText("<--");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonvalidar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(39, 39, 39))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(cbxarticulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(cbxarticulo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(cbxarticulo3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(cbxarticulo4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel8))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxarticulo5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lbganancia)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(64, 64, 64)))))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(spinner1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                .addComponent(spinner2)
                                .addComponent(spinner3)
                                .addComponent(spinner4)
                                .addComponent(spinner5))
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbprecio1)
                            .addComponent(jLabel7)
                            .addComponent(lbprecio2)
                            .addComponent(lbprecio3)
                            .addComponent(lbprecio4)
                            .addComponent(lbprecio5)
                            .addComponent(lbtotal)))
                    .addComponent(buttonnewfactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(buttonvalidar)
                    .addComponent(buttonnewfactura))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxarticulo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbprecio1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxarticulo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbprecio2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbprecio3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cbxarticulo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbxarticulo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbprecio4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbxarticulo5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbprecio5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbganancia)
                    .addComponent(jLabel10)
                    .addComponent(lbtotal)
                    .addComponent(jButton1))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxarticulo1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxarticulo1ItemStateChanged
        // TODO add your handling code here:

String registro="";
String nombre="";
String marca="";
String precio="";
String unidades="";
String nm="";
String preciocompra="";


   

if(cbxarticulo1.getSelectedItem().equals("Elegir articulo")){

    SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(0);
        
        
         spinner1.setModel(spm);
   JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner1.getEditor()).getTextField();
    tf.setEditable(false);
    lbprecio1.setText("00000");
    precio_mostrar[0]=0;
    preciocompra_mostrar[0]=0;
    ganancias[0]=0;
    
}else{
    
//cargando valores del registro
        
        try{
            
         FileReader leer=new FileReader("datos/articulos.data");
       BufferedReader contenido=new BufferedReader(leer);
              registro=contenido.readLine();
              
     
              
           while(registro!=null){
               
              for(int i=0;i<registro.length();i++){
                  
           // lee nombre articulo
               if(registro.charAt(i)=='#'){
               
                   for(int j=i+1;registro.charAt(j)!='$';j++){
                   nombre+=registro.charAt(j);
                 
                   } 
                
           
              }
               
                // lee marca articulo
               if(registro.charAt(i)=='$'){
               
                   for(int j=i+1;registro.charAt(j)!='%';j++){
                   marca+=registro.charAt(j);
                   } 
           
              }
               
                 // lee precio del articulo
               if(registro.charAt(i)=='%'){
               
                   for(int j=i+1;registro.charAt(j)!='@';j++){
                   precio+=registro.charAt(j);
                   } 
           
              }
               // lee unidades
                if(registro.charAt(i)=='@'){
               
                   for(int j=i+1;registro.charAt(j)!='!';j++){
                   unidades+=registro.charAt(j);
                   } 
           
              }
                
                  // lee precio bruto
                if(registro.charAt(i)=='!'){
               
                   for(int j=i+1;j<registro.length();j++){
                   preciocompra+=registro.charAt(j);
                   } 
           
              }
                
                
               
           }
           
           nm=nombre+" ("+marca+")";
     
        if(nm.equals(cbxarticulo1.getSelectedItem())){
            
        SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(Integer.parseInt(unidades));
        
        
         spinner1.setModel(spm);
          JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner1.getEditor()).getTextField();
    tf.setEditable(false);
    
    precio_mostrar[0]=Double.parseDouble(precio);
    preciocompra_mostrar[0]=Double.parseDouble(preciocompra);
   
        lbprecio1.setText("00000");
          ganancias[0]=0;
        }
              
                  registro="";
                  nombre="";
                  precio="";
                  marca="";
                  unidades="";
                  preciocompra="";
                  registro=contenido.readLine();

                  
       }
   leer.close();
   contenido.close();
       
        }catch(Exception e){
        
        
        
        }
    
    
    
    
}


        
        

        
    }//GEN-LAST:event_cbxarticulo1ItemStateChanged

    private void cbxarticulo2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxarticulo2ItemStateChanged
        // TODO add your handling code here:

String registro="";
String nombre="";
String marca="";
String precio="";
String unidades="";
String nm="";
String preciocompra="";


   

if(cbxarticulo2.getSelectedItem().equals("Elegir articulo")){

    SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(0);
            lbprecio2.setText("00000");
        
         spinner2.setModel(spm);
   JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner2.getEditor()).getTextField();
    tf.setEditable(false);
       precio_mostrar[1]=0;
    preciocompra_mostrar[1]=0;
      ganancias[1]=0;
    
}else{
    
//cargando valores del registro
        
        try{
            
         FileReader leer=new FileReader("datos/articulos.data");
       BufferedReader contenido=new BufferedReader(leer);
              registro=contenido.readLine();
              
     
              
           while(registro!=null){
               
              for(int i=0;i<registro.length();i++){
                  
           // lee nombre articulo
               if(registro.charAt(i)=='#'){
               
                   for(int j=i+1;registro.charAt(j)!='$';j++){
                   nombre+=registro.charAt(j);
                 
                   } 
                
           
              }
               
                // lee marca articulo
               if(registro.charAt(i)=='$'){
               
                   for(int j=i+1;registro.charAt(j)!='%';j++){
                   marca+=registro.charAt(j);
                   } 
           
              }
               
                 // lee precio del articulo
               if(registro.charAt(i)=='%'){
               
                   for(int j=i+1;registro.charAt(j)!='@';j++){
                   precio+=registro.charAt(j);
                   } 
           
              }
               // lee unidades
                if(registro.charAt(i)=='@'){
               
                   for(int j=i+1;registro.charAt(j)!='!';j++){
                   unidades+=registro.charAt(j);
                   } 
           
              }
                
                  // lee precio bruto
                if(registro.charAt(i)=='!'){
               
                   for(int j=i+1;j<registro.length();j++){
                   preciocompra+=registro.charAt(j);
                   } 
           
              }
                
                
               
           }
           
           nm=nombre+" ("+marca+")";
     
        if(nm.equals(cbxarticulo2.getSelectedItem())){
            
        SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(Integer.parseInt(unidades));
        
        
         spinner2.setModel(spm);
          JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner2.getEditor()).getTextField();
    tf.setEditable(false);
    
    precio_mostrar[1]=Double.parseDouble(precio);
    preciocompra_mostrar[1]=Double.parseDouble(preciocompra);
           lbprecio2.setText("00000");
             ganancias[1]=0;
    
        
        }
              
                  registro="";
                  nombre="";
                  precio="";
                  marca="";
                  unidades="";
                  preciocompra="";
                  registro=contenido.readLine();

                  
       }
   leer.close();
   contenido.close();
       
        }catch(Exception e){
        
        
        
        }
    
    
    
    
}


        
        

              // TODO add your handling code here:
    }//GEN-LAST:event_cbxarticulo2ItemStateChanged

    private void cbxarticulo3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxarticulo3ItemStateChanged
        // TODO add your handling code here:

String registro="";
String nombre="";
String marca="";
String precio="";
String unidades="";
String nm="";
String preciocompra="";


   

if(cbxarticulo3.getSelectedItem().equals("Elegir articulo")){

    SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(0);
        
        
         spinner3.setModel(spm);
   JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner3.getEditor()).getTextField();
    tf.setEditable(false);
    
           lbprecio3.setText("00000");
              precio_mostrar[2]=0;
    preciocompra_mostrar[2]=0;
      ganancias[2]=0;
    
}else{
    
//cargando valores del registro
        
        try{
            
         FileReader leer=new FileReader("datos/articulos.data");
       BufferedReader contenido=new BufferedReader(leer);
              registro=contenido.readLine();
              
     
              
           while(registro!=null){
               
              for(int i=0;i<registro.length();i++){
                  
           // lee nombre articulo
               if(registro.charAt(i)=='#'){
               
                   for(int j=i+1;registro.charAt(j)!='$';j++){
                   nombre+=registro.charAt(j);
                 
                   } 
                
           
              }
               
                // lee marca articulo
               if(registro.charAt(i)=='$'){
               
                   for(int j=i+1;registro.charAt(j)!='%';j++){
                   marca+=registro.charAt(j);
                   } 
           
              }
               
                 // lee precio del articulo
               if(registro.charAt(i)=='%'){
               
                   for(int j=i+1;registro.charAt(j)!='@';j++){
                   precio+=registro.charAt(j);
                   } 
           
              }
               // lee unidades
                if(registro.charAt(i)=='@'){
               
                   for(int j=i+1;registro.charAt(j)!='!';j++){
                   unidades+=registro.charAt(j);
                   } 
           
              }
                
                  // lee precio bruto
                if(registro.charAt(i)=='!'){
               
                   for(int j=i+1;j<registro.length();j++){
                   preciocompra+=registro.charAt(j);
                   } 
           
              }
                
                
               
           }
           
           nm=nombre+" ("+marca+")";
     
        if(nm.equals(cbxarticulo3.getSelectedItem())){
            
        SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(Integer.parseInt(unidades));
        
        
         spinner3.setModel(spm);
          JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner3.getEditor()).getTextField();
    tf.setEditable(false);
    
    precio_mostrar[2]=Double.parseDouble(precio);
    preciocompra_mostrar[2]=Double.parseDouble(preciocompra);
    lbprecio3.setText("00000");
      ganancias[2]=0;
    
        
        }
              
                  registro="";
                  nombre="";
                  precio="";
                  marca="";
                  unidades="";
                  preciocompra="";
                  registro=contenido.readLine();

                  
       }
   leer.close();
   contenido.close();
       
        }catch(Exception e){
        
        
        
        }
    
    
    
    
}


        
        

              // TODO add your handling code here:
    }//GEN-LAST:event_cbxarticulo3ItemStateChanged

    private void cbxarticulo4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxarticulo4ItemStateChanged
        // TODO add your handling code here:

String registro="";
String nombre="";
String marca="";
String precio="";
String unidades="";
String nm="";
String preciocompra="";


   

if(cbxarticulo4.getSelectedItem().equals("Elegir articulo")){

    SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(0);
        
        
         spinner4.setModel(spm);
   JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner4.getEditor()).getTextField();
    tf.setEditable(false);
    lbprecio4.setText("00000");
       precio_mostrar[3]=0;
    preciocompra_mostrar[3]=0;
      ganancias[3]=0;
    
}else{
    
//cargando valores del registro
        
        try{
            
         FileReader leer=new FileReader("datos/articulos.data");
       BufferedReader contenido=new BufferedReader(leer);
              registro=contenido.readLine();
              
     
              
           while(registro!=null){
               
              for(int i=0;i<registro.length();i++){
                  
           // lee nombre articulo
               if(registro.charAt(i)=='#'){
               
                   for(int j=i+1;registro.charAt(j)!='$';j++){
                   nombre+=registro.charAt(j);
                 
                   } 
                
           
              }
               
                // lee marca articulo
               if(registro.charAt(i)=='$'){
               
                   for(int j=i+1;registro.charAt(j)!='%';j++){
                   marca+=registro.charAt(j);
                   } 
           
              }
               
                 // lee precio del articulo
               if(registro.charAt(i)=='%'){
               
                   for(int j=i+1;registro.charAt(j)!='@';j++){
                   precio+=registro.charAt(j);
                   } 
           
              }
               // lee unidades
                if(registro.charAt(i)=='@'){
               
                   for(int j=i+1;registro.charAt(j)!='!';j++){
                   unidades+=registro.charAt(j);
                   } 
           
              }
                
                  // lee precio bruto
                if(registro.charAt(i)=='!'){
               
                   for(int j=i+1;j<registro.length();j++){
                   preciocompra+=registro.charAt(j);
                   } 
           
              }
                
                
               
           }
           
           nm=nombre+" ("+marca+")";
     
        if(nm.equals(cbxarticulo4.getSelectedItem())){
            
        SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(Integer.parseInt(unidades));
        
        
         spinner4.setModel(spm);
          JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner4.getEditor()).getTextField();
    tf.setEditable(false);
    
    precio_mostrar[3]=Double.parseDouble(precio);
    preciocompra_mostrar[3]=Double.parseDouble(preciocompra);
        lbprecio4.setText("00000");
          ganancias[3]=0;
        
        }
              
                  registro="";
                  nombre="";
                  precio="";
                  marca="";
                  unidades="";
                  preciocompra="";
                  registro=contenido.readLine();

                  
       }
   leer.close();
   contenido.close();
       
        }catch(Exception e){
        
        
        
        }
    
    
    
    
}


        
        

              // TODO add your handling code here:
    }//GEN-LAST:event_cbxarticulo4ItemStateChanged

    private void cbxarticulo5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxarticulo5ItemStateChanged
        // TODO add your handling code here:

String registro="";
String nombre="";
String marca="";
String precio="";
String unidades="";
String nm="";
String preciocompra="";


   

if(cbxarticulo5.getSelectedItem().equals("Elegir articulo")){

    SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(0);
        
        
         spinner5.setModel(spm);
   JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner5.getEditor()).getTextField();
    tf.setEditable(false);
        lbprecio5.setText("00000");
        
           precio_mostrar[4]=0;
    preciocompra_mostrar[4]=0;
      ganancias[4]=0;
}else{
    
//cargando valores del registro
        
        try{
            
         FileReader leer=new FileReader("datos/articulos.data");
       BufferedReader contenido=new BufferedReader(leer);
              registro=contenido.readLine();
              
     
              
           while(registro!=null){
               
              for(int i=0;i<registro.length();i++){
                  
           // lee nombre articulo
               if(registro.charAt(i)=='#'){
               
                   for(int j=i+1;registro.charAt(j)!='$';j++){
                   nombre+=registro.charAt(j);
                 
                   } 
                
           
              }
               
                // lee marca articulo
               if(registro.charAt(i)=='$'){
               
                   for(int j=i+1;registro.charAt(j)!='%';j++){
                   marca+=registro.charAt(j);
                   } 
           
              }
               
                 // lee precio del articulo
               if(registro.charAt(i)=='%'){
               
                   for(int j=i+1;registro.charAt(j)!='@';j++){
                   precio+=registro.charAt(j);
                   } 
           
              }
               // lee unidades
                if(registro.charAt(i)=='@'){
               
                   for(int j=i+1;registro.charAt(j)!='!';j++){
                   unidades+=registro.charAt(j);
                   } 
           
              }
                
                  // lee precio bruto
                if(registro.charAt(i)=='!'){
               
                   for(int j=i+1;j<registro.length();j++){
                   preciocompra+=registro.charAt(j);
                   } 
           
              }
                
                
               
           }
           
           nm=nombre+" ("+marca+")";
     
        if(nm.equals(cbxarticulo5.getSelectedItem())){
            
        SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(Integer.parseInt(unidades));
        
        
         spinner5.setModel(spm);
          JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner5.getEditor()).getTextField();
    tf.setEditable(false);
    
    precio_mostrar[4]=Double.parseDouble(precio);
    preciocompra_mostrar[4]=Double.parseDouble(preciocompra);
        lbprecio5.setText("00000");
          ganancias[4]=0;
    
        
        }
              
                  registro="";
                  nombre="";
                  precio="";
                  marca="";
                  unidades="";
                  preciocompra="";
                  registro=contenido.readLine();

                  
       }
   leer.close();
   contenido.close();
       
        }catch(Exception e){
        
        
        
        }
    
    
    
    
}


        
        

              // TODO add your handling code here:
    }//GEN-LAST:event_cbxarticulo5ItemStateChanged

    private void spinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner1StateChanged
        // TODO add your handling code here:
        
lbprecio1.setText(""+precio_mostrar[0]*Double.parseDouble(spinner1.getValue().toString()));
        ganancias[0]=(precio_mostrar[0]-preciocompra_mostrar[0])*Double.parseDouble(spinner1.getValue().toString());
    }//GEN-LAST:event_spinner1StateChanged

    private void spinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner2StateChanged
lbprecio2.setText(""+precio_mostrar[1]*Double.parseDouble(spinner2.getValue().toString()));
 ganancias[1]=(precio_mostrar[1]-preciocompra_mostrar[1])*Double.parseDouble(spinner2.getValue().toString());
    }//GEN-LAST:event_spinner2StateChanged

    private void spinner3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner3StateChanged
lbprecio3.setText(""+precio_mostrar[2]*Double.parseDouble(spinner3.getValue().toString()));
 ganancias[2]=(precio_mostrar[2]-preciocompra_mostrar[2])*Double.parseDouble(spinner3.getValue().toString());
    }//GEN-LAST:event_spinner3StateChanged

    private void spinner4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner4StateChanged
     lbprecio4.setText(""+precio_mostrar[3]*Double.parseDouble(spinner4.getValue().toString()));
     ganancias[3]=(precio_mostrar[3]-preciocompra_mostrar[3])*Double.parseDouble(spinner4.getValue().toString()); 
    }//GEN-LAST:event_spinner4StateChanged

    private void spinner5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner5StateChanged
      lbprecio5.setText(""+precio_mostrar[4]*Double.parseDouble(spinner5.getValue().toString()));
       ganancias[4]=(precio_mostrar[4]-preciocompra_mostrar[4])*Double.parseDouble(spinner5.getValue().toString());
    }//GEN-LAST:event_spinner5StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  String articulo1=cbxarticulo1.getSelectedItem().toString();
   String articulo2=cbxarticulo2.getSelectedItem().toString();
    String articulo3=cbxarticulo3.getSelectedItem().toString();
     String articulo4=cbxarticulo4.getSelectedItem().toString();
      String articulo5=cbxarticulo5.getSelectedItem().toString();
 
      if(articulo1.equals("Elegir articulo"))articulo1+="1";
      if(articulo2.equals("Elegir articulo"))articulo2+="2";
      if(articulo3.equals("Elegir articulo"))articulo3+="3";
      if(articulo4.equals("Elegir articulo"))articulo4+="4";
      if(articulo5.equals("Elegir articulo"))articulo5+="5";
        
        
        
        if((!articulo1.equals(articulo2)) &&
             (!articulo1.equals(articulo3)) &&
                (!articulo1.equals(articulo4)) &&
                (!articulo1.equals(articulo5)) &&
                (!articulo2.equals(articulo3)) &&
                (!articulo2.equals(articulo4)) &&
                (!articulo2.equals(articulo5)) &&
                (!articulo3.equals(articulo4)) &&
                (!articulo3.equals(articulo5)) &&
                (!articulo4.equals(articulo5))
                ){
            buttonvalidar.setEnabled(true);
        double total=Double.parseDouble(lbprecio1.getText())+Double.parseDouble(lbprecio2.getText())+
                Double.parseDouble(lbprecio3.getText())+Double.parseDouble(lbprecio4.getText())
                +Double.parseDouble(lbprecio5.getText());
        
        lbtotal.setText(""+total);
        lbganancia.setText(""+(ganancias[0]+ganancias[1]+ganancias[2]+ganancias[3]+ganancias[4]));
        
        spinner1.setEnabled(false);
        spinner2.setEnabled(false);
        spinner3.setEnabled(false);
        spinner4.setEnabled(false);
        spinner5.setEnabled(false);
        buttonnewfactura.setEnabled(true);
        
        
    }else{
                  buttonvalidar.setEnabled(false);
            JOptionPane.showMessageDialog(null,"No se puede facturar con articulos repetidos");
            
            }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buttonnewfacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonnewfacturaActionPerformed
        // TODO add your handling code here:
        buttonvalidar.setEnabled(false);
        spinner1.setEnabled(true);
        spinner2.setEnabled(true);
        spinner3.setEnabled(true);
        spinner4.setEnabled(true);
        spinner5.setEnabled(true);
        buttonnewfactura.setEnabled(false);
        
        
        
    }//GEN-LAST:event_buttonnewfacturaActionPerformed

    private void buttonvalidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonvalidarActionPerformed
        // TODO add your handling code here:
        //guardar cambios en los registros
        String v1=spinner1.getValue().toString();
        String v2=spinner2.getValue().toString();
        String v3=spinner3.getValue().toString();
        String v4=spinner4.getValue().toString();
        String v5=spinner5.getValue().toString();
        
        buttonvalidar.setEnabled(false);
        
 String registro[]=new String[cbxarticulo1.getItemCount()];
 String nombre="";
 String marca="";
 String precio="";
 String unidades="";
 String registroc="";
 String preciocompra="";
 
 int p=0;
 int desde=0;
 int hasta=0;
 boolean corresponde=false,corresponde2=false,corresponde3=false,corresponde4=false,corresponde5=false;
        try{
            
        FileReader leer=new FileReader("datos/articulos.data");
       BufferedReader contenido=new BufferedReader(leer);
       
   
      
 


             registro[p]=contenido.readLine();
             p++;
             registroc=contenido.readLine();
     
    
             System.out.println(registroc);
             
             while(registroc!=null){
                       

             for(int i=0;i<registroc.length();i++){
               
               
                 if(registroc.charAt(i)=='#'){
                 
                 for(int j=i+1;registroc.charAt(j)!='$';j++){
                 nombre+=registroc.charAt(j);
                 
                 }
             
                 
                 
                 }
                 
                    // lee marca articulo
               if(registroc.charAt(i)=='$'){
                   
               
                 
                   for(int j=i+1;registroc.charAt(j)!='%';j++){
                   marca+=registroc.charAt(j);
                   } 
              
              }
                String completename=nombre+" ("+marca+")";
                //comprobando articulo1
             if(completename.equals(cbxarticulo1.getSelectedItem().toString()) && corresponde==false)
             {
             corresponde=true;
            }
             //comprobando articulo 2
             if(completename.equals(cbxarticulo2.getSelectedItem().toString()) && corresponde2==false)
             {
             corresponde2=true;
            }
             // comprobando articulo 3
             
              if(completename.equals(cbxarticulo3.getSelectedItem().toString()) && corresponde3==false)
             {
             corresponde3=true;
            }
              
              // comprobando articulo 4
             
              if(completename.equals(cbxarticulo4.getSelectedItem().toString()) && corresponde4==false)
             {
             corresponde4=true;
            }
              
              
              // comprobando articulo 5
             
              if(completename.equals(cbxarticulo5.getSelectedItem().toString()) && corresponde5==false)
             {
             corresponde5=true;
            }
              
              
              
             
             
             
             
             
                  // lee precio del articulo
               if(registroc.charAt(i)=='%'){
           
                   for(int j=i;registroc.charAt(j)!='@';j++){
                   precio+=registroc.charAt(j);
                   } 
             
              }
          

           
             // lee unidades
                if(registroc.charAt(i)=='@'){
               
                   for(int j=i+1;registroc.charAt(j)!='!';j++){
                   unidades+=registroc.charAt(j);
                   } 

              }
                
                 // lee precio bruto
                if(registroc.charAt(i)=='!'){
               
                   for(int j=i;j<registroc.length();j++){
                   preciocompra+=registroc.charAt(j);
                   } 

              }
                
                
                
           
           
           }
          //viendo el articulo 1
             if(corresponde){
      int actualizarstock=Integer.parseInt(unidades)-Integer.parseInt(spinner1.getValue().toString());
      
            registroc=registroc.replaceAll(unidades,""+actualizarstock);
       
          
               corresponde=false;
                SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(actualizarstock);
        spinner1.setModel(spm);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner1.getEditor()).getTextField();
    tf.setEditable(false);
               
             }
             
             //viendo el articulo 2
             if(corresponde2){
      int actualizarstock=Integer.parseInt(unidades)-Integer.parseInt(spinner2.getValue().toString());
      
            registroc=registroc.replaceAll(unidades,""+actualizarstock);
       
          
               corresponde=false;
               
               SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(actualizarstock);
        spinner2.setModel(spm);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner2.getEditor()).getTextField();
    tf.setEditable(false);
               
             }
             
                //viendo el articulo 3
             if(corresponde3){
      int actualizarstock=Integer.parseInt(unidades)-Integer.parseInt(spinner3.getValue().toString());
      
            registroc=registroc.replaceAll(unidades,""+actualizarstock);
       
          
               corresponde=false;
               SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(actualizarstock);
        spinner3.setModel(spm);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner3.getEditor()).getTextField();
    tf.setEditable(false);
               
             }
             
                //viendo el articulo 4
             if(corresponde4){
      int actualizarstock=Integer.parseInt(unidades)-Integer.parseInt(spinner4.getValue().toString());
      
            registroc=registroc.replaceAll(unidades,""+actualizarstock);
       
          
               corresponde=false;
               
                SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(actualizarstock);
        spinner4.setModel(spm);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner4.getEditor()).getTextField();
    tf.setEditable(false);
               
             }
             
             
             //viendo el articulo 5
             if(corresponde5){
      int actualizarstock=Integer.parseInt(unidades)-Integer.parseInt(spinner5.getValue().toString());
      
            registroc=registroc.replaceAll(unidades,""+actualizarstock);
       
          
               corresponde=false;
               
                SpinnerNumberModel spm=new SpinnerNumberModel();
        spm.setMinimum(0);
        spm.setMaximum(actualizarstock);
        spinner5.setModel(spm);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) spinner5.getEditor()).getTextField();
    tf.setEditable(false);
               
             }
             
             
             
             
             
       
                 registro[p]=registroc;
   
         
                  if(p<cbxarticulo1.getItemCount()){
                  p++;
                  }
                  
   
                  registroc=contenido.readLine();
  
                  nombre="";
                  precio="";
                  marca="";
                  unidades="";
                  preciocompra="";
       
                 
                             
             }
        
             
             leer.close();
   contenido.close();
System.out.println("Esto funciona");
   // modificacion de registros
         File fout = new File("datos/articulos.data");
FileOutputStream fos = new FileOutputStream(fout);

BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos));

   for(int i=0;i<cbxarticulo1.getItemCount();i++){
   bw.write(registro[i]);
    
       
       if(i==cbxarticulo1.getItemCount()-1)
       {
           break;
       }
   bw.newLine();
   }
             
            bw.close();  
             fos.close();
             
             JOptionPane.showMessageDialog(null,"Factura generada!");
             
             //guardando factura--------------------------------------------------
             
             try{
                 
        //agregando factura
        FileWriter fw=new FileWriter("datos/stf.data",true);




/*
        lectura sin utilidad
        FileReader leer=new FileReader("datos/articulos.txt");
       BufferedReader contenido=new BufferedReader(leer);
*/
       fw.write("\r\n");
       
    
       /*
       while(contenido.readLine()!=null){
        fw.write("\r\n");
System.out.println("X");
        }
*/

       //comprobar id
       FileReader fr=new FileReader("datos/readid.data");
       BufferedReader br=new BufferedReader(fr);
       
       int cosmicid=Integer.parseInt(br.readLine());
       fr.close();
       br.close();
       
       //modificandoid
       FileWriter fwid=new FileWriter("datos/readid.data");
       String save=""+(cosmicid+1);
       for(int i=0;i<save.length();i++)
       {
           
       fwid.write(save.charAt(i));
       
       }
       
       fwid.close();
       
       //
       
       
       
       

        //escribiendo idfacturas

        try{
            String id="FACT"+(cosmicid+1);

fw.write('#');
for(int i=0;i<id.length();i++){

fw.write(id.charAt(i));
}



}catch(IOException e){
}
        
                //escribiendo articulos vendidos
                String av1="",av2="",av3="",av4="",av5="";
                
 if(!cbxarticulo1.getSelectedItem().equals("Elegir articulo")) av1=cbxarticulo1.getSelectedItem().toString()+"("+v1+")";
  if(!cbxarticulo2.getSelectedItem().equals("Elegir articulo")) av2=cbxarticulo2.getSelectedItem().toString()+"("+v2+")";
   if(!cbxarticulo3.getSelectedItem().equals("Elegir articulo")) av3=cbxarticulo3.getSelectedItem().toString()+"("+v3+")";
    if(!cbxarticulo4.getSelectedItem().equals("Elegir articulo")) av4=cbxarticulo4.getSelectedItem().toString()+"("+v4+")";
     if(!cbxarticulo5.getSelectedItem().equals("Elegir articulo")) av5=cbxarticulo5.getSelectedItem().toString()+"("+v5+")";
     
        try{
     
            
String articulosv=av1+","+av2+","+av3+","+av4+","+av5;


fw.write('$');
for(int i=0;i<articulosv.length();i++){

fw.write(articulosv.charAt(i));
}









}catch(IOException e){
}
        
                   //escribiendo monto_total
        try{
            
            

fw.write('%');
for(int i=0;i<lbtotal.getText().length();i++){

fw.write(lbtotal.getText().charAt(i));
}

}catch(IOException e){
    JOptionPane.showMessageDialog(null,"Quien esta detras de ti?");
}
  
                        //escribiendo ganancias
        try{

fw.write('@');
for(int i=0;i<lbganancia.getText().length();i++){

fw.write(lbganancia.getText().charAt(i));

}



}catch(IOException e){
    JOptionPane.showMessageDialog(null,"Esto no debio fallar");
}
        
        
                               //escribiendo fecha
                               Date fecha=new Date();
        try{

String fm=""+fecha;
fw.write('*');
for(int i=0;i<fm.length();i++){

fw.write(fm.charAt(i));

}



}catch(IOException e){
    JOptionPane.showMessageDialog(null,"Error en la fehca");
}
        
                                     //escribiendo fechacorta
        try{

String fcorta=new SimpleDateFormat("dd-MM-yyyy").format(fecha);
fw.write('&');

for(int i=0;i<fcorta.length();i++){

fw.write(fcorta.charAt(i));

}



}catch(IOException e){
    JOptionPane.showMessageDialog(null,"Error de escritura");
}
        
        
        
        
        
        
        
        

//close file

    JOptionPane.showMessageDialog(null,"Factura Guardada! No: ( "+(cosmicid+1)+" )");
    fw.close();
 

        }catch(Exception e){
     
        JOptionPane.showMessageDialog(null,"Error al guardar factura");
        
        }
             
             
             
             
        }catch(Exception e){
        System.out.println("fallo fatal");
        JOptionPane.showMessageDialog(null, "Error durante facturacion");
        
        }





        
        
        
        
    }//GEN-LAST:event_buttonvalidarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.dispose();
       Menu start=new Menu(this.getLocation());
       start.setVisible(true);
       
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed


    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonnewfactura;
    private javax.swing.JButton buttonvalidar;
    private javax.swing.JComboBox<String> cbxarticulo1;
    private javax.swing.JComboBox<String> cbxarticulo2;
    private javax.swing.JComboBox<String> cbxarticulo3;
    private javax.swing.JComboBox<String> cbxarticulo4;
    private javax.swing.JComboBox<String> cbxarticulo5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbganancia;
    private javax.swing.JLabel lbprecio1;
    private javax.swing.JLabel lbprecio2;
    private javax.swing.JLabel lbprecio3;
    private javax.swing.JLabel lbprecio4;
    private javax.swing.JLabel lbprecio5;
    private javax.swing.JLabel lbtotal;
    private javax.swing.JSpinner spinner1;
    private javax.swing.JSpinner spinner2;
    private javax.swing.JSpinner spinner3;
    private javax.swing.JSpinner spinner4;
    private javax.swing.JSpinner spinner5;
    // End of variables declaration//GEN-END:variables
}
